"use strict";
var page_1 = require("ui/page");
var router_1 = require("@angular/router");
var core_1 = require("@angular/core");
var services_1 = require("../../services");
var ListingComponent = (function () {
    function ListingComponent(page, router, DBService, UserService) {
        this.page = page;
        this.router = router;
        this.DBService = DBService;
        this.UserService = UserService;
        this.loader_status = false;
        this.page.actionBarHidden = false;
    }
    ListingComponent.prototype.ngOnInit = function () {
        if (this.DBService.isLoaded() == 'true' && this.DBService.isLoaded() != null) {
            this.router.navigate(['/dashboard']);
        }
    };
    ListingComponent.prototype.login = function () {
        var _this = this;
        if (this.email == '' || this.password == '') {
            alert('Invalid Email or Password');
            this.loader_status = false;
        }
        else {
            var data = {
                Username: this.email,
                Password: this.password
            };
            this.loader_status = true;
            this.UserService.login(data).then(function (res) { return _this.processLogin(res); });
        }
    };
    ListingComponent.prototype.processLogin = function (data) {
        data = JSON.parse(data);
        if (data.status == 200) {
            this.DBService.saveUserData(data);
            this.loader_status = false;
            this.router.navigate(['/dashboard']);
        }
        else {
            this.loader_status = false;
            alert('invalid username or password');
        }
    };
    return ListingComponent;
}());
ListingComponent = __decorate([
    core_1.Component({
        selector: "my-login",
        templateUrl: "./pages/listing/listing.html",
        styleUrls: ["./pages/listing/listing.css"]
    }),
    __metadata("design:paramtypes", [page_1.Page,
        router_1.Router,
        services_1.DBService,
        services_1.UserService])
], ListingComponent);
exports.ListingComponent = ListingComponent;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJsaXN0aW5nLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsZ0NBQStCO0FBQy9CLDBDQUF5QztBQUV6QyxzQ0FBMEM7QUFDMUMsMkNBQXlEO0FBU3pELElBQWEsZ0JBQWdCO0lBUXpCLDBCQUVZLElBQVUsRUFDVixNQUFjLEVBQ2QsU0FBb0IsRUFDcEIsV0FBd0I7UUFIeEIsU0FBSSxHQUFKLElBQUksQ0FBTTtRQUNWLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCxjQUFTLEdBQVQsU0FBUyxDQUFXO1FBQ3BCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBR2hDLElBQUksQ0FBQyxhQUFhLEdBQVUsS0FBSyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQztJQUN0QyxDQUFDO0lBRUQsbUNBQVEsR0FBUjtRQUVJLEVBQUUsQ0FBQSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxFQUFFLElBQUksSUFBSyxDQUFDLENBQzdFLENBQUM7WUFDRyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7UUFDekMsQ0FBQztJQUNMLENBQUM7SUFFRCxnQ0FBSyxHQUFMO1FBQUEsaUJBbUJDO1FBakJHLEVBQUUsQ0FBQSxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksRUFBRSxJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksRUFBRSxDQUFDLENBQzNDLENBQUM7WUFDRyxLQUFLLENBQUMsMkJBQTJCLENBQUMsQ0FBQztZQUNuQyxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztRQUMvQixDQUFDO1FBQ0QsSUFBSSxDQUNKLENBQUM7WUFDRyxJQUFJLElBQUksR0FBRztnQkFDUCxRQUFRLEVBQUUsSUFBSSxDQUFDLEtBQUs7Z0JBQ3BCLFFBQVEsRUFBRyxJQUFJLENBQUMsUUFBUTthQUMzQixDQUFBO1lBRUQsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7WUFDMUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUM3QixVQUFBLEdBQUcsSUFBSSxPQUFBLEtBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLEVBQXRCLENBQXNCLENBQ2hDLENBQUE7UUFDTCxDQUFDO0lBQ0wsQ0FBQztJQUVELHVDQUFZLEdBQVosVUFBYSxJQUFRO1FBRWpCLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFBO1FBRXZCLEVBQUUsQ0FBQSxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksR0FBRyxDQUFDLENBQ3RCLENBQUM7WUFDRyxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNsQyxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztZQUMzQixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUM7UUFDekMsQ0FBQztRQUNELElBQUksQ0FDSixDQUFDO1lBRUcsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7WUFDM0IsS0FBSyxDQUFDLDhCQUE4QixDQUFDLENBQUE7UUFDekMsQ0FBQztJQUVMLENBQUM7SUFDTCx1QkFBQztBQUFELENBQUMsQUFuRUQsSUFtRUM7QUFuRVksZ0JBQWdCO0lBTjVCLGdCQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsVUFBVTtRQUNwQixXQUFXLEVBQUUsOEJBQThCO1FBQzNDLFNBQVMsRUFBRSxDQUFDLDZCQUE2QixDQUFDO0tBQzdDLENBQUM7cUNBWW9CLFdBQUk7UUFDRixlQUFNO1FBQ0gsb0JBQVM7UUFDUCxzQkFBVztHQWIzQixnQkFBZ0IsQ0FtRTVCO0FBbkVZLDRDQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2UgfSBmcm9tIFwidWkvcGFnZVwiO1xuaW1wb3J0IHsgUm91dGVyIH0gZnJvbSBcIkBhbmd1bGFyL3JvdXRlclwiO1xuaW1wb3J0IHsgcmVxdWVzdCB9IGZyb20gXCJodHRwXCI7XG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgREJTZXJ2aWNlLCBVc2VyU2VydmljZSB9ICBmcm9tIFwiLi4vLi4vc2VydmljZXNcIjtcblxuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJteS1sb2dpblwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi4vcGFnZXMvbGlzdGluZy9saXN0aW5nLmh0bWxcIixcbiAgICBzdHlsZVVybHM6IFtcIi4vcGFnZXMvbGlzdGluZy9saXN0aW5nLmNzc1wiXVxufSlcblxuZXhwb3J0IGNsYXNzIExpc3RpbmdDb21wb25lbnQge1xuICBcbiAgICB1cmw6IHN0cmluZztcbiAgICBlbWFpbDogc3RyaW5nO1xuICAgIHBhc3N3b3JkOiBzdHJpbmc7XG5cbiAgICBsb2FkZXJfc3RhdHVzOiBib29sZWFuO1xuXG4gICAgY29uc3RydWN0b3JcbiAgICAoXG4gICAgICAgIHByaXZhdGUgcGFnZTogUGFnZSxcbiAgICAgICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlciwgXG4gICAgICAgIHByaXZhdGUgREJTZXJ2aWNlOiBEQlNlcnZpY2UsXG4gICAgICAgIHByaXZhdGUgVXNlclNlcnZpY2U6IFVzZXJTZXJ2aWNlLFxuICAgICkgXG4gICAge1xuICAgICAgICB0aGlzLmxvYWRlcl9zdGF0dXMgICAgICAgID0gZmFsc2U7XG4gICAgICAgIHRoaXMucGFnZS5hY3Rpb25CYXJIaWRkZW4gPSBmYWxzZTtcbiAgICB9XG5cbiAgICBuZ09uSW5pdCgpe1xuXG4gICAgICAgIGlmKHRoaXMuREJTZXJ2aWNlLmlzTG9hZGVkKCkgPT0gJ3RydWUnICYmIHRoaXMuREJTZXJ2aWNlLmlzTG9hZGVkKCkgIT0gbnVsbCApIFxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLnJvdXRlci5uYXZpZ2F0ZShbJy9kYXNoYm9hcmQnXSk7ICAgICAgIFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgbG9naW4oKSB7XG5cbiAgICAgICAgaWYodGhpcy5lbWFpbCA9PSAnJyB8fCB0aGlzLnBhc3N3b3JkID09ICcnKSBcbiAgICAgICAge1xuICAgICAgICAgICAgYWxlcnQoJ0ludmFsaWQgRW1haWwgb3IgUGFzc3dvcmQnKTtcbiAgICAgICAgICAgIHRoaXMubG9hZGVyX3N0YXR1cyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2VcbiAgICAgICAge1xuICAgICAgICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgICAgICAgICAgVXNlcm5hbWU6IHRoaXMuZW1haWwsXG4gICAgICAgICAgICAgICAgUGFzc3dvcmQgOiB0aGlzLnBhc3N3b3JkXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMubG9hZGVyX3N0YXR1cyA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLlVzZXJTZXJ2aWNlLmxvZ2luKGRhdGEpLnRoZW4oXG4gICAgICAgICAgICAgICAgcmVzID0+IHRoaXMucHJvY2Vzc0xvZ2luKHJlcylcbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByb2Nlc3NMb2dpbihkYXRhOmFueSl7XG5cbiAgICAgICAgZGF0YSA9IEpTT04ucGFyc2UoZGF0YSlcblxuICAgICAgICBpZihkYXRhLnN0YXR1cyA9PSAyMDApIFxuICAgICAgICB7XG4gICAgICAgICAgICB0aGlzLkRCU2VydmljZS5zYXZlVXNlckRhdGEoZGF0YSk7XG4gICAgICAgICAgICB0aGlzLmxvYWRlcl9zdGF0dXMgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMucm91dGVyLm5hdmlnYXRlKFsnL2Rhc2hib2FyZCddKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlXG4gICAgICAgIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgdGhpcy5sb2FkZXJfc3RhdHVzID0gZmFsc2U7XG4gICAgICAgICAgICBhbGVydCgnaW52YWxpZCB1c2VybmFtZSBvciBwYXNzd29yZCcpXG4gICAgICAgIH1cbiAgICAgICAgXG4gICAgfVxufVxuIl19