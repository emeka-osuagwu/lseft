"use strict";
var http_1 = require("http");
var GoalService = (function () {
    function GoalService() {
    }
    GoalService.prototype.saveGoal = function (data) {
        return new Promise(function (resolve, reject) {
            http_1.request({
                url: "http://45.55.185.97/api/goal/create",
                method: "POST",
                headers: { "Content-Type": "application/json" },
                content: JSON.stringify(data)
            })
                .then(function (response) {
                var returnData = JSON.stringify(response.content);
                resolve(returnData);
            })
                .catch(function (err) {
                console.log("Error occurred " + err.stack);
                reject(err.stack);
            });
        });
    };
    GoalService.prototype.getAllGoals = function () {
        return new Promise(function (resolve, reject) {
            http_1.request({
                url: "http://45.55.185.97/api/user/goals/PIV100041",
                method: "GET",
                headers: { "Content-Type": "application/json" },
            })
                .then(function (response) {
                var returnData = JSON.stringify(response.content);
                resolve(returnData);
            })
                .catch(function (err) {
                console.log("Error occurred " + err.stack);
                reject(err.stack);
            });
        });
    };
    return GoalService;
}());
exports.GoalService = GoalService;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ29hbC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZ29hbC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSw2QkFBK0I7QUFJL0I7SUFBQTtJQXlDQSxDQUFDO0lBdkNHLDhCQUFRLEdBQVIsVUFBUyxJQUFTO1FBRWQsTUFBTSxDQUFDLElBQUksT0FBTyxDQUFDLFVBQUMsT0FBTyxFQUFFLE1BQU07WUFDL0IsY0FBTyxDQUFDO2dCQUNKLEdBQUcsRUFBRSxxQ0FBcUM7Z0JBQzFDLE1BQU0sRUFBRSxNQUFNO2dCQUNkLE9BQU8sRUFBRSxFQUFFLGNBQWMsRUFBRSxrQkFBa0IsRUFBRTtnQkFDL0MsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO2FBQ2hDLENBQUM7aUJBQ0QsSUFBSSxDQUFDLFVBQUEsUUFBUTtnQkFDVixJQUFJLFVBQVUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDbEQsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3hCLENBQUMsQ0FBQztpQkFDRCxLQUFLLENBQUMsVUFBQSxHQUFHO2dCQUNOLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUMzQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3RCLENBQUMsQ0FBQyxDQUFBO1FBQ04sQ0FBQyxDQUFDLENBQUE7SUFDTixDQUFDO0lBRUQsaUNBQVcsR0FBWDtRQUNJLE1BQU0sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBRSxNQUFNO1lBQy9CLGNBQU8sQ0FBQztnQkFDSixHQUFHLEVBQUUsOENBQThDO2dCQUNuRCxNQUFNLEVBQUUsS0FBSztnQkFDYixPQUFPLEVBQUUsRUFBRSxjQUFjLEVBQUUsa0JBQWtCLEVBQUU7YUFDbEQsQ0FBQztpQkFDRCxJQUFJLENBQUMsVUFBQSxRQUFRO2dCQUNWLElBQUksVUFBVSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUNsRCxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7WUFDeEIsQ0FBQyxDQUFDO2lCQUNELEtBQUssQ0FBQyxVQUFBLEdBQUc7Z0JBQ04sT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzNDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDdEIsQ0FBQyxDQUFDLENBQUE7UUFDTixDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFHTCxrQkFBQztBQUFELENBQUMsQUF6Q0QsSUF5Q0M7QUF6Q1ksa0NBQVciLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IHJlcXVlc3QgfSBmcm9tIFwiaHR0cFwiO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgREJTZXJ2aWNlIH0gZnJvbSBcIi4uL3NlcnZpY2VzXCI7XG4gXG5leHBvcnQgY2xhc3MgR29hbFNlcnZpY2Uge1xuXG4gICAgc2F2ZUdvYWwoZGF0YTogYW55KSBcbiAgICB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICByZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICB1cmw6IFwiaHR0cDovLzQ1LjU1LjE4NS45Ny9hcGkvZ29hbC9jcmVhdGVcIixcbiAgICAgICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcbiAgICAgICAgICAgICAgICBjb250ZW50OiBKU09OLnN0cmluZ2lmeShkYXRhKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgcmV0dXJuRGF0YSA9IEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlLmNvbnRlbnQpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUocmV0dXJuRGF0YSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJFcnJvciBvY2N1cnJlZCBcIiArIGVyci5zdGFjayk7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVyci5zdGFjayk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGdldEFsbEdvYWxzKCl7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICByZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICB1cmw6IFwiaHR0cDovLzQ1LjU1LjE4NS45Ny9hcGkvdXNlci9nb2Fscy9QSVYxMDAwNDFcIixcbiAgICAgICAgICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgICAgICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgcmV0dXJuRGF0YSA9IEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlLmNvbnRlbnQpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUocmV0dXJuRGF0YSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGVyciA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJFcnJvciBvY2N1cnJlZCBcIiArIGVyci5zdGFjayk7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVyci5zdGFjayk7XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KSAgIFxuICAgIH1cblxuXG59Il19